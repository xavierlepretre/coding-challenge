// Code generated by MockGen. DO NOT EDIT.
// Source: ../../model/id.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBillIdGenerator is a mock of BillIdGenerator interface.
type MockBillIdGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockBillIdGeneratorMockRecorder
}

// MockBillIdGeneratorMockRecorder is the mock recorder for MockBillIdGenerator.
type MockBillIdGeneratorMockRecorder struct {
	mock *MockBillIdGenerator
}

// NewMockBillIdGenerator creates a new mock instance.
func NewMockBillIdGenerator(ctrl *gomock.Controller) *MockBillIdGenerator {
	mock := &MockBillIdGenerator{ctrl: ctrl}
	mock.recorder = &MockBillIdGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBillIdGenerator) EXPECT() *MockBillIdGeneratorMockRecorder {
	return m.recorder
}

// New mocks base method.
func (m *MockBillIdGenerator) New() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New")
	ret0, _ := ret[0].(string)
	return ret0
}

// New indicates an expected call of New.
func (mr *MockBillIdGeneratorMockRecorder) New() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockBillIdGenerator)(nil).New))
}
